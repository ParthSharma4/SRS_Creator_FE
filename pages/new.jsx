// pages/new.jsx
import { useState } from 'react';
import { useRouter } from 'next/router';
import { useAuth } from '../hooks/useAuth';
import ProtectedRoute from '../components/ProtectedRoute';
import Navbar from '../components/Navbar';
import { createProject } from '../utils/api';
import { collection, addDoc } from 'firebase/firestore';
import { db } from '../lib/firebase';

const NewProject = () => {
  const [description, setDescription] = useState('');
  const [loading, setLoading] = useState(false);
  const { user } = useAuth();
  const router = useRouter();

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!description.trim()) return;

    setLoading(true);
    try {
      // Save to Firebase Firestore
      const projectData = {
        title: `Project ${new Date().toLocaleDateString()}`,
        description: description.trim(),
        userId: user.uid,
        userEmail: user.email,
        userName: user.displayName,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
        status: 'draft',
        content: '# SRS Document\n\n*Document will be generated by AI...*'
      };

      // Save to Firebase
      const docRef = await addDoc(collection(db, 'projects'), projectData);
      
      console.log('Project saved to Firebase with ID:', docRef.id);

      // Redirect to project page
      router.push(`/project/${docRef.id}`);
    } catch (error) {
      console.error('Error creating project:', error);
      alert('Failed to create project: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <ProtectedRoute>
      <div className="min-h-screen bg-gray-50">
        <Navbar />
        <div className="max-w-4xl mx-auto py-8 px-4">
          <h1 className="text-3xl font-bold text-gray-800 mb-8">
            Create New SRS Project
          </h1>
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Project Description
              </label>
              <textarea
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                placeholder="Paste your client's description here. Example: 'I want an app for booking dog walkers.'"
                className="w-full h-48 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
                required
              />
              <p className="text-sm text-gray-500 mt-1">
                Describe what the client wants in simple terms. The AI will help you expand this into a full SRS document.
              </p>
            </div>
            <button
              type="submit"
              disabled={loading || !description.trim()}
              className="bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 text-white px-6 py-3 rounded-lg font-medium transition duration-200"
            >
              {loading ? 'Creating Project...' : 'Create SRS Document'}
            </button>
          </form>
        </div>
      </div>
    </ProtectedRoute>
  );
};

export default NewProject;
